@model UsersListViewModel



@{
    ViewData["Title"] = "List of users";
}

<body>
    <br />

    <form asp-action="Index" method="post" role="form">

        @*<div class="form-row col-5 pl-1 pb-2">*@

        <div class="form-group">

            <div class="form-row">
                <div class="col-5">

                    <input asp-for="SearchName" class="form-control" placeholder="Search by name" />


                </div>




                <div class="col-2">
                    <select asp-for="SearchRole" asp-items="@new SelectList(Enum.GetNames(typeof(ApplicationUserRoles)))" class="form-control">
                        <option selected disabled class="text-hide">Role</option>
                        <option value="">All roles</option>
                    </select>
                </div>

            </div>

            <div class="form-row">
                <div class="col-3 mt-2">
                    <input type="submit" class="btn btn-outline-dark btn-sm" value="Search" />
                </div>
            </div>

        </div>


    </form>



    <table class="table table-striped table-hover table-sm border">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(m => m.Users.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Users.FirstOrDefault().Email)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Users.FirstOrDefault().PhoneNumber)
                </th>
                <th>Role</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Users)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.PhoneNumber)
                    </td>
                    <td>
                        @Model.Roles[item.Id]
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group">

                            <a class="btn btn-outline-secondary" asp-area="Admin" asp-controller="AdminUsers" asp-action="Edit" asp-route-id="@item.Id">Edit</a>

                            @if (item.LockoutEnd == null)
                            {
                                <a class="btn btn-outline-danger" asp-area="Admin" asp-controller="AdminUsers" asp-action="Delete" asp-route-id="@item.Id">Inactivate</a>
                            }
                            else
                            {
                                <a class="btn btn-outline-success" asp-area="Admin" asp-controller="AdminUsers" asp-action="Activate" asp-route-id="@item.Id">Activate</a>
                            }

                        </div>
                    </td>


                </tr>
            }
        </tbody>
    </table>

    <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
         page-class="btn btn-outline-secondary" page-class-normal="btn btn-secondary"
         page-class-selected="btn btn-secondary active" class="btn-group btn-group-sm m-1"></div>

</body>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
